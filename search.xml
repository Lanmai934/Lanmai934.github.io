<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/03/03/01.%E7%88%AC%E8%99%AB/"/>
      <url>/2022/03/03/01.%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<p>![assets&#x2F;公众号.jpg)</p><h1 id="1-爬虫介绍"><a href="#1-爬虫介绍" class="headerlink" title="1.爬虫介绍"></a>1.爬虫介绍</h1><h2 id="1-1-爬虫定义与分类"><a href="#1-1-爬虫定义与分类" class="headerlink" title="1.1 爬虫定义与分类"></a>1.1 爬虫定义与分类</h2><p>网络爬虫，通过一定的规则策略，自动抓取、下载互联网上网页，在按照某些规则算法对这些网页进行数据抽取，形成所需要的数据集。</p><p>按照抓取网站对象来分类，可以分为2类爬虫。</p><ul><li>通用爬虫：类似百度、谷歌这样的爬虫，抓取对象是整个互联网，对于网页没有固定的抽取规则。 对于所有网页都是一套通用的处理方法。</li><li>垂直爬虫：这类爬虫主要针对一些特定对象、网站，有一台指定的爬取路径、数据抽取规则。比如今日头条，它的目标网站就是所有的新闻类网站。 比如Etao比价、网易的慧慧购物助手，他们的目标网站就是 淘宝、京东、天猫等等电商网站。</li></ul><p>通用爬虫和垂直爬虫显著的区别：</p><ul><li>抓取范围，通用爬虫的抓取范围要比垂直爬虫大得多，一个是整个互联网，一个是指定的网站。</li><li>爬取路线，通用爬虫要不按照深度爬取、要不是按广度爬取。 而垂直爬虫则可能是按照指定路线爬取。</li><li>数据处理，通用爬虫一般就是分词、索引到数据库。 而垂直爬虫则通过特定的规则来抽取更加精细的数据 。</li></ul><p>关于行业内的网络爬虫，经过除部分分析，基本以垂直爬虫需求为主，比如通过垂直电商平台获取国内和国际的商品价格等场景。</p><h2 id="1-2-网络爬虫实现"><a href="#1-2-网络爬虫实现" class="headerlink" title="1.2 网络爬虫实现"></a>1.2 网络爬虫实现</h2><h3 id="1-2-1-爬虫的组成部分"><a href="#1-2-1-爬虫的组成部分" class="headerlink" title="1.2.1 爬虫的组成部分"></a>1.2.1 爬虫的组成部分</h3><p>一个完整的爬虫功能通常由以下功能模块组成：</p><ul><li>HTTP下载器：负责HTTP下载，别小瞧它，要做好还挺不容易，因为你面对的复杂而无序、甚至包含错误的互联网。</li><li>抓取队列：存储新产生的URL队列（queue），队列可以是多种形式的，他可以是redis的队列、数据库中的表、内存中的队列。根据场景，你可以自行选择。</li><li>调度器：负责管理工作的，它通过制定策略，规定哪些URL优先执行、哪些URL靠后。</li><li>多线程模块：支持多线程，并且可控，实现海量数据的大批量爬取。</li><li>排重集合：这是一个爬虫必不可少的部分，你必须记录下哪些URL已经采集过、哪些是未采集过的，哪些信息已经采集过了，哪些还没有采集，需要记录上次抓取时间。</li><li>页面解析器：定义如何解析抓取到的页面，对于通用爬虫，它可能对于所有页面都是一套逻辑，就是分词、索引。 但对于垂直爬虫，则需要指定规则，手段包括正则、XPath、正文识别、ORC图片识别等多种方式。</li><li>数据存储：将爬虫按照解析规则解析的结果写入数据库中， 一般情况下都是存储到数据库啦，一般的关系数据库，也有写到NoSQL中。</li><li>结果提供服务：将爬虫的结果以批量数据的方式对外提供同步数据文件，或者提供WebSevice查询服务，按照实际需求情况。</li></ul><h3 id="1-2-2-爬虫技术流程"><a href="#1-2-2-爬虫技术流程" class="headerlink" title="1.2.2 爬虫技术流程"></a>1.2.2 爬虫技术流程</h3><p><img src="/assets%5C1621475629783.png" alt="1621475629783" loading="lazy"></p><p>爬虫的核心流程如下：</p><ul><li>指定起始URLs。 也就是指定一个入口，不管是通用爬虫还是垂直爬虫，都需要一个入口。</li><li>下载、解析URL。 这里分为2个操作，分别是：抽取数据，存储到数据库以及解析出页面中包含的URL。</li><li>将解析的新URL放到队列中。</li><li>调度器从URL队列中，按照一定策略，取出要下载的URL，添加到HTTP下载中。</li><li>下载完成后，对文本内容进行解析和规则提取出有用的结果，写入数据库中。</li><li>对入库的信息进行清洗、治理、去重等操作，提升爬取结果的数据质量</li></ul><h1 id="2-cheerio介绍"><a href="#2-cheerio介绍" class="headerlink" title="2 cheerio介绍"></a>2 cheerio介绍</h1><h2 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h2><ul><li>###熟悉的语法###  ：cheerio实现了jQuery的一个子集，去掉了jQuery中所有与DOM不一致或者是用来填浏览器的坑的东西，重现了jQuery最美妙的API</li><li>###快到没朋友###  ：cheerio使用了及其简洁而又标准的DOM模型， 因此对文档的转换，操作，渲染都极其的高效。基本的端到端测试显示它的速度至少是JSDOM的8倍</li><li>###极其灵活###  ：cheerio使用了<a href="https://link.jianshu.com/?t=https://github.com/FB55">@FB55</a>编写的非常兼容的<a href="https://link.jianshu.com/?t=https://github.com/fb55/htmlparser2">htmlparser2</a>，因此它可以解析几乎所有的HTML和XML</li></ul><h2 id="2-2-愉快的使用cheerio"><a href="#2-2-愉快的使用cheerio" class="headerlink" title="2.2 愉快的使用cheerio"></a>2.2 愉快的使用cheerio</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cheerio</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>),</span><br><span class="line">$ = cheerio.<span class="title function_">load</span>(<span class="string">&#x27;&lt;h2 class = &quot;title&quot;&gt;Hello world&lt;/h2&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;h2.title&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;Hello there!&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;h2&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;welcome&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$.<span class="title function_">html</span>();</span><br><span class="line"><span class="comment">//=&gt; &lt;h2 class = &quot;title welcome&quot;&gt;Hello there!&lt;/h2&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3-解析html（load）"><a href="#2-3-解析html（load）" class="headerlink" title="2.3 解析html（load）"></a>2.3 解析html（load）</h2><p>首先你需要先加载你的HTML。jQuery会自动完成这一步，因为jQuery操作的DOM是固定的。但是在使用cheerio时我们要手动加载我们的HTML文档</p><p>首选的方式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>),</span><br><span class="line">$ = cheerio.<span class="title function_">load</span>(<span class="string">&#x27;&lt;ul id = &quot;fruits&quot;&gt;...&lt;/ul&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>如果你需要自定义一些解析选项，你可以多传递一个对象给load方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ = cheerio.<span class="title function_">load</span>(<span class="string">&#x27;&lt;ul id = &quot;fruits&quot;&gt;...&lt;/ul&gt;&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">ignoreWhitespace</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">xmlMode</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>更多的解析选项可以参考<a href="https://link.jianshu.com/?t=https://github.com/fb55/domhandler">domhandler</a>和<a href="https://link.jianshu.com/?t=https://github.com/fb55/htmlparser2/wiki/Parser-options">parser-options</a></p><h2 id="2-4-选择器（selectors）"><a href="#2-4-选择器（selectors）" class="headerlink" title="2.4 选择器（selectors）"></a>2.4 选择器（selectors）</h2><p>cheerio的选择器几乎和jQuery一模一样，所以语法上十分相像</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$( selector, [context], [root] )</span><br></pre></td></tr></table></figure><h3 id="selector-在-context-的范围内搜索，-context-的范围又包含在-root-的范围内。-selector-和-context-可以是一个字符串，DOM元素，DOM数组或者cheerio实例。-root-一般是一个HTML文档字符串"><a href="#selector-在-context-的范围内搜索，-context-的范围又包含在-root-的范围内。-selector-和-context-可以是一个字符串，DOM元素，DOM数组或者cheerio实例。-root-一般是一个HTML文档字符串" class="headerlink" title="selector###  在###  context###  的范围内搜索，###  context###  的范围又包含在###  root###  的范围内。###  selector###  和###  context###  可以是一个字符串，DOM元素，DOM数组或者cheerio实例。###  root###  一般是一个HTML文档字符串"></a>selector###  在###  context###  的范围内搜索，###  context###  的范围又包含在###  root###  的范围内。###  selector###  和###  context###  可以是一个字符串，DOM元素，DOM数组或者cheerio实例。###  root###  一般是一个HTML文档字符串</h3><p>选择器是文档遍历和操作的起点。如同在jQuery中一样，它是选择元素节点最重要的方法，但是在jQuery中选择器建立在CSS选择器标准库上。cheerio的选择器实现了大部分的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.apple&#x27;</span>, <span class="string">&#x27;#fruits&#x27;</span>).<span class="title function_">text</span>()</span><br><span class="line"><span class="comment">//=&gt; Apple</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;ul .pear&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;class&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; pear</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;li[class=orange]&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li class = &quot;orange&quot;&gt;Orange&lt;/li&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-5-属性操作（atrributes）"><a href="#2-5-属性操作（atrributes）" class="headerlink" title="2.5 属性操作（atrributes）"></a>2.5 属性操作（atrributes）</h2><p>用来获取和更改属性的方法：</p><h3 id="attr-name-value"><a href="#attr-name-value" class="headerlink" title="attr(name, value)"></a>attr(name, value)</h3><p>这个方法用来获取和设置属性。获取第一个符合匹配的元素的属性值。如果某个属性值被设置成null，那么该属性会被移除。你也可以把###  map###  和###  function###  作为参数传递进去，就像在jQuery中一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; fruits</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;.apple&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;favorite&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li class = &quot;apple&quot; id = &quot;favorite&quot;&gt;Apple&lt;/li&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>更多信息请查看 <a href="https://link.jianshu.com/?t=http://api.jquery.com/attr/">http://api.jquery.com/attr/</a></p></blockquote><h3 id="removeAtrr-name"><a href="#removeAtrr-name" class="headerlink" title="removeAtrr(name)###"></a>removeAtrr(name)###</h3><p>移除名为name的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">removeAttr</span>(<span class="string">&#x27;class&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li&gt;Pear&lt;/li&gt;</span></span><br></pre></td></tr></table></figure><h3 id="hasClass-className"><a href="#hasClass-className" class="headerlink" title="hasClass(className)###"></a>hasClass(className)###</h3><p>检查元素是否含有此类名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">hasClass</span>(<span class="string">&#x27;pear&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; true</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;apple&#x27;</span>).<span class="title function_">hasClass</span>(<span class="string">&#x27;fruit&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; false</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">hasClass</span>(<span class="string">&#x27;pear&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; true</span></span><br></pre></td></tr></table></figure><h3 id="addClass-className"><a href="#addClass-className" class="headerlink" title="addClass(className)###"></a>addClass(className)###</h3><p>添加类名到所有的匹配元素，可以用函数作为参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;fruit&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li class = &quot;pear fruit&quot;&gt;Pear&lt;/li&gt;</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;.apple&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;fruit red&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li class = &quot;apple fruit red&quot;&gt;Apple&lt;/li&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>参见 <a href="https://link.jianshu.com/?t=http://api.jquery.com/addClass/">http://api.jquery.com/addClass/</a></p></blockquote><h3 id="remoteClass-className"><a href="#remoteClass-className" class="headerlink" title="remoteClass([className])###"></a>remoteClass([className])###</h3><p>移除一个或者多个（空格分隔）的类名，如果className为空，则所有的类名都会被移除，可以传递函数作为参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;pear&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li class = &quot;&quot;&gt;Pear&lt;/li&gt;</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;.apple&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;red&#x27;</span>).<span class="title function_">removeClass</span>().<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li class = &quot;&quot;&gt;Apple&lt;/li&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>参见 <a href="https://link.jianshu.com/?t=http://api.jquery.com/removeClass/">http://api.jquery.com/removeClass/</a></p></blockquote><h2 id="2-6-遍历"><a href="#2-6-遍历" class="headerlink" title="2.6 遍历"></a>2.6 遍历</h2><h3 id="find-selector"><a href="#find-selector" class="headerlink" title="find(selector)###"></a>find(selector)###</h3><p>在当前元素集合中选择符合选择器规则的元素集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#fruits&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;li&#x27;</span>).<span class="property">length</span></span><br><span class="line"><span class="comment">//=&gt; 3</span></span><br></pre></td></tr></table></figure><h3 id="parent"><a href="#parent" class="headerlink" title="parent()###"></a>parent()###</h3><p>获取元素集合第一个元素的父元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">parent</span>().<span class="title function_">attr</span>(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; fruits</span></span><br></pre></td></tr></table></figure><h3 id="next"><a href="#next" class="headerlink" title="next()###"></a>next()###</h3><p>选择当前元素的下一个兄弟元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.apple&#x27;</span>).<span class="title function_">next</span>().<span class="title function_">hasClass</span>(<span class="string">&#x27;orange&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; true</span></span><br></pre></td></tr></table></figure><h3 id="prev-同-next-相反"><a href="#prev-同-next-相反" class="headerlink" title="prev()###       同###  next()###  相反"></a>prev()###       同###  next()###  相反</h3><h3 id="siblings"><a href="#siblings" class="headerlink" title="siblings()###"></a>siblings()###</h3><p>获取元素集合中第一个元素的所有兄弟元素，不包含它自己</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">siblings</span>().<span class="property">length</span></span><br><span class="line"><span class="comment">//=&gt; 2</span></span><br></pre></td></tr></table></figure><h3 id="children-selector"><a href="#children-selector" class="headerlink" title="children( selector )###"></a>children( selector )###</h3><h3 id="each-function-index-element"><a href="#each-function-index-element" class="headerlink" title="each( function(index, element) )###"></a>each( function(index, element) )###</h3><p>遍历函数返回false即可终止遍历</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fruits = [];</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i, elem</span>) &#123;</span><br><span class="line">  fruits[i] = $(<span class="variable language_">this</span>).<span class="title function_">text</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fruits.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>);</span><br><span class="line"><span class="comment">//=&gt; Apple, Orange, Pear</span></span><br></pre></td></tr></table></figure><h3 id="map-function-index-element"><a href="#map-function-index-element" class="headerlink" title="map( function(index, element) )###"></a>map( function(index, element) )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">i, el</span>) &#123;</span><br><span class="line">  <span class="comment">// this === el</span></span><br><span class="line">  <span class="keyword">return</span> $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;class&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">get</span>().<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>);</span><br><span class="line"><span class="comment">//=&gt; apple, orange, pear</span></span><br></pre></td></tr></table></figure><h3 id="filter-selector"><a href="#filter-selector" class="headerlink" title="filter( selector )###"></a>filter( selector )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">filter</span>(<span class="string">&#x27;.orange&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;class&#x27;</span>);</span><br><span class="line"><span class="comment">//=&gt; orange</span></span><br></pre></td></tr></table></figure><h3 id="filter-function-index"><a href="#filter-function-index" class="headerlink" title="filter( function(index) )###"></a>filter( function(index) )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">i, el</span>) &#123;</span><br><span class="line">  <span class="comment">// this === el</span></span><br><span class="line">  <span class="keyword">return</span> $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;class&#x27;</span>) === <span class="string">&#x27;orange&#x27;</span>;</span><br><span class="line">&#125;).<span class="title function_">attr</span>(<span class="string">&#x27;class&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; orange</span></span><br></pre></td></tr></table></figure><h3 id="first"><a href="#first" class="headerlink" title="first()###"></a>first()###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#fruits&#x27;</span>).<span class="title function_">children</span>().<span class="title function_">first</span>().<span class="title function_">text</span>()</span><br><span class="line"><span class="comment">//=&gt; Apple</span></span><br></pre></td></tr></table></figure><h3 id="last"><a href="#last" class="headerlink" title="last()###"></a>last()###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#fruits&#x27;</span>).<span class="title function_">children</span>().<span class="title function_">last</span>().<span class="title function_">text</span>()</span><br><span class="line"><span class="comment">//=&gt; Pear</span></span><br></pre></td></tr></table></figure><h3 id="eq-i"><a href="#eq-i" class="headerlink" title="eq( i )###"></a>eq( i )###</h3><p>缩小元素集合，可以用负数表示倒数第 i 个元素被保留</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">eq</span>(<span class="number">0</span>).<span class="title function_">text</span>()</span><br><span class="line"><span class="comment">//=&gt; Apple</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">eq</span>(-<span class="number">1</span>).<span class="title function_">text</span>()</span><br><span class="line"><span class="comment">//=&gt; Pear</span></span><br></pre></td></tr></table></figure><h2 id="2-7-操作DOM"><a href="#2-7-操作DOM" class="headerlink" title="2.7 操作DOM"></a>2.7 操作DOM</h2><p>操作DOM结构的方法</p><h3 id="append-content-content-…"><a href="#append-content-content-…" class="headerlink" title="append( content, [content, …] )###"></a>append( content, [content, …] )###</h3><h3 id="prepend-content-content-…"><a href="#prepend-content-content-…" class="headerlink" title="prepend( content, [content, …] )###"></a>prepend( content, [content, …] )###</h3><h3 id="after-content-content-…"><a href="#after-content-content-…" class="headerlink" title="after( content, [content, …] )###"></a>after( content, [content, …] )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.apple&#x27;</span>).<span class="title function_">after</span>(<span class="string">&#x27;&lt;li class = &quot;plum&quot;&gt;Plum&lt;/li&gt;&#x27;</span>)</span><br><span class="line">$.<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt;  &lt;ul id = &quot;fruits&quot;&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;apple&quot;&gt;Apple&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;plum&quot;&gt;Plum&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;orange&quot;&gt;Orange&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;pear&quot;&gt;Pear&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//    &lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><h3 id="before-content-content-…"><a href="#before-content-content-…" class="headerlink" title="before( content, [content, …] )###"></a>before( content, [content, …] )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.apple&#x27;</span>).<span class="title function_">before</span>(<span class="string">&#x27;&lt;li class = &quot;plum&quot;&gt;Plum&lt;/li&gt;&#x27;</span>)</span><br><span class="line">$.<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt;  &lt;ul id = &quot;fruits&quot;&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;plum&quot;&gt;Plum&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;apple&quot;&gt;Apple&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;orange&quot;&gt;Orange&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;pear&quot;&gt;Pear&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//    &lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><h3 id="remove-selector"><a href="#remove-selector" class="headerlink" title="remove( [selector] )###"></a>remove( [selector] )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">remove</span>()</span><br><span class="line">$.<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt;  &lt;ul id = &quot;fruits&quot;&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;apple&quot;&gt;Apple&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;orange&quot;&gt;Orange&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//    &lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><h3 id="replaceWith-content"><a href="#replaceWith-content" class="headerlink" title="replaceWith( content )###"></a>replaceWith( content )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> plum = $(<span class="string">&#x27;&lt;li class = &quot;plum&quot;&gt;Plum&lt;/li&gt;&#x27;</span>)</span><br><span class="line">$(<span class="string">&#x27;.pear&#x27;</span>).<span class="title function_">replaceWith</span>(plum)</span><br><span class="line">$.<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;ul id = &quot;fruits&quot;&gt;</span></span><br><span class="line"><span class="comment">//     &lt;li class = &quot;apple&quot;&gt;Apple&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//     &lt;li class = &quot;orange&quot;&gt;Orange&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//     &lt;li class = &quot;plum&quot;&gt;Plum&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//   &lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><h3 id="empty"><a href="#empty" class="headerlink" title="empty()###"></a>empty()###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">empty</span>()</span><br><span class="line">$.<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt;  &lt;ul id = &quot;fruits&quot;&gt;&lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><h3 id="html-htmlString"><a href="#html-htmlString" class="headerlink" title="html( [htmlString] )###"></a>html( [htmlString] )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.orange&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; Orange</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#fruits&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&lt;li class = &quot;mango&quot;&gt;Mango&lt;/li&gt;&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt; &lt;li class=&quot;mango&quot;&gt;Mango&lt;/li&gt;</span></span><br></pre></td></tr></table></figure><h3 id="text-textString"><a href="#text-textString" class="headerlink" title="text( [textString] )###"></a>text( [textString] )###</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.orange&#x27;</span>).<span class="title function_">text</span>()</span><br><span class="line"><span class="comment">//=&gt; Orange</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">text</span>()</span><br><span class="line"><span class="comment">//=&gt;  Apple</span></span><br><span class="line"><span class="comment">//    Orange</span></span><br><span class="line"><span class="comment">//    Pear</span></span><br></pre></td></tr></table></figure><h2 id="2-8-解析和渲染"><a href="#2-8-解析和渲染" class="headerlink" title="2.8 解析和渲染"></a>2.8 解析和渲染</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//=&gt;  &lt;ul id = &quot;fruits&quot;&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;apple&quot;&gt;Apple&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;orange&quot;&gt;Orange&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//      &lt;li class = &quot;pear&quot;&gt;Pear&lt;/li&gt;</span></span><br><span class="line"><span class="comment">//    &lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><p>输出包含自己在内的HTML（outer HTML）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">html</span>(<span class="string">&#x27;.pear&#x27;</span>)</span><br><span class="line"><span class="comment">//=&gt; &lt;li class = &quot;pear&quot;&gt;Pear&lt;/li&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-9-杂项"><a href="#2-9-杂项" class="headerlink" title="2.9 杂项"></a>2.9 杂项</h2><h3 id="toArray"><a href="#toArray" class="headerlink" title="toArray()"></a>toArray()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">toArray</span>()</span><br><span class="line"><span class="comment">//=&gt; [ &#123;...&#125;, &#123;...&#125;, &#123;...&#125; ]</span></span><br></pre></td></tr></table></figure><h3 id="clone"><a href="#clone" class="headerlink" title="clone()"></a>clone()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> moreFruit = $(<span class="string">&#x27;#fruits&#x27;</span>).<span class="title function_">clone</span>()</span><br></pre></td></tr></table></figure><h2 id="2-10-常用工具"><a href="#2-10-常用工具" class="headerlink" title="2.10 常用工具"></a>2.10 常用工具</h2><h3 id="root"><a href="#root" class="headerlink" title="$.root()"></a>$.root()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">root</span>().<span class="title function_">append</span>(<span class="string">&#x27;&lt;ul id=&quot;vegetables&quot;&gt;&lt;/ul&gt;&#x27;</span>).<span class="title function_">html</span>();</span><br><span class="line"><span class="comment">//=&gt; &lt;ul id=&quot;fruits&quot;&gt;...&lt;/ul&gt;&lt;ul id=&quot;vegetables&quot;&gt;&lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><h3 id="contains-container-contained"><a href="#contains-container-contained" class="headerlink" title="$.contains( container, contained )"></a>$.contains( container, contained )</h3><h1 id="3-node-crawler介绍"><a href="#3-node-crawler介绍" class="headerlink" title="3.node-crawler介绍"></a>3.node-crawler介绍</h1><p>node-crawler目标打造成Node社区最强大和流行的爬虫&#x2F;内容抽取工具库，且支持生产环境。</p><p>特性：</p><ul><li>服务端DOM和自动jQuery注入，使用Cheerio（默认）或JSDOM</li><li>可配置的连接池大小和重试次数</li><li>Control rate limit 控制请求间隔时间</li><li>支持设置请求队列优先级</li><li>forceUTF8模式可让爬虫处理字符集编码探测和转换</li><li>兼容Node 4.x及以上版本</li></ul><h2 id="3-1-基本使用"><a href="#3-1-基本使用" class="headerlink" title="3.1 基本使用"></a>3.1 基本使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># npm install crawler</span><br><span class="line"></span><br><span class="line"># <span class="number">01</span>.<span class="property">movie</span>.<span class="property">js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Crawler</span> = <span class="built_in">require</span>(<span class="string">&#x27;crawler&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c = <span class="keyword">new</span> <span class="title class_">Crawler</span>(&#123;</span><br><span class="line">    <span class="comment">//每次请求爬取的时间间隔</span></span><br><span class="line">    <span class="attr">rateLimit</span>: <span class="number">2000</span>,</span><br><span class="line">    <span class="comment">//最大连接数量</span></span><br><span class="line">    <span class="attr">maxConnections</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="comment">//爬取成功的回调函数（通用）</span></span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">            <span class="keyword">const</span> $searchList = $(<span class="string">&#x27;.search-list&gt;div&#x27;</span>);</span><br><span class="line">            $searchList.<span class="title function_">map</span>(<span class="function">(<span class="params">index,item</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>($(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&gt;h3&#x27;</span>).<span class="title function_">text</span>())</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//大片首页</span></span><br><span class="line">c.<span class="title function_">queue</span>(<span class="string">&#x27;https://www.1905.com/vod/list/n_1/o4p1.html&#x27;</span>);</span><br><span class="line"><span class="comment">//微电影 系列电影</span></span><br><span class="line">c.<span class="title function_">queue</span>([<span class="string">&#x27;https://www.1905.com/vod/list/n_1_c_922/o4p1.html&#x27;</span>,<span class="string">&#x27;https://www.1905.com/vod/list/n_2/o3p1.html&#x27;</span>]);</span><br><span class="line"><span class="comment">//纪录片</span></span><br><span class="line">c.<span class="title function_">queue</span>([&#123;</span><br><span class="line">    <span class="attr">uri</span>: <span class="string">&#x27;https://www.1905.com/vod/list/c_927/o3p1.html&#x27;</span>,</span><br><span class="line">    <span class="attr">jQuery</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//自定义参数：可以在callback中的res.options.parameter中获取</span></span><br><span class="line">    <span class="attr">parameter</span>: <span class="string">&#x27;参数&#x27;</span>,</span><br><span class="line">    <span class="comment">//自定义爬取的回调函数</span></span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">options</span>.<span class="property">parameter</span>)</span><br><span class="line">            <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">            <span class="keyword">const</span> $searchList = $(<span class="string">&#x27;.search-list&gt;div&#x27;</span>);</span><br><span class="line">            $searchList.<span class="title function_">map</span>(<span class="function">(<span class="params">index,item</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>($(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&gt;img&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure><h2 id="3-2-下载文件"><a href="#3-2-下载文件" class="headerlink" title="3.2 下载文件"></a>3.2 下载文件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下载文件</span></span><br><span class="line"><span class="keyword">const</span> c2 = <span class="keyword">new</span> <span class="title class_">Crawler</span>(&#123;</span><br><span class="line">    <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">jQuery</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">err, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">stack</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            fs.<span class="title function_">createWriteStream</span>(<span class="string">&quot;data\\&quot;</span>+res.<span class="property">options</span>.<span class="property">filename</span>).<span class="title function_">write</span>(res.<span class="property">body</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">c2.<span class="title function_">queue</span>(&#123;</span><br><span class="line">    <span class="attr">uri</span>: <span class="string">&#x27;https://image11.m1905.cn/uploadfile/2019/0401/thumb_1_150_203_20190401021843670441.jpg&#x27;</span>,</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;thumb_1_150_203_20190401021843670441.jpg&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="3-3-请求预处理"><a href="#3-3-请求预处理" class="headerlink" title="3.3 请求预处理"></a>3.3 请求预处理</h2><p>在每次发送请求之前要做的事情可以在preRequest方法中设置（直接发送请求不会触发该方法）<br>const c &#x3D; new Crawler({<br>    preRequest: (options, done) &#x3D;&gt; {<br>        &#x2F;&#x2F;这里的options将会传递给request模块<br>        console.log(options);<br>        &#x2F;&#x2F;当done方法调用的时候，请求将被发送<br>        done();<br>    },<br>    callback: (err, res, done) &#x3D;&gt; {<br>        if (err) {<br>            console.log(err);<br>        } else {<br>            console.log(res.statusCode);<br>        }<br>    }<br>});<br>c.queue({<br>    uri: ‘<a href="http://www.google.com&/#39;">http://www.google.com&#39;</a>,<br>    &#x2F;&#x2F;这里的preRequest将会覆盖new Crawler中定义的preRequest<br>    preRequest: (options, done) &#x3D;&gt; {<br>        setTimeout(() &#x3D;&gt; {<br>            console.log(options);<br>            done();<br>        }, 1000);<br>    }<br>});</p><h2 id="3-4-直接发送请求"><a href="#3-4-直接发送请求" class="headerlink" title="3.4 直接发送请求"></a>3.4 直接发送请求</h2><p>如果想要直接发送请求而不经过Crawler的任务队列，可以使用direct方法（其配置和queue一样）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">crawler.<span class="title function_">direct</span>(&#123;</span><br><span class="line">    <span class="attr">uri</span>: <span class="string">&#x27;http://www.google.com&#x27;</span>,</span><br><span class="line">    <span class="comment">// default to true, direct requests won&#x27;t trigger Event:&#x27;request&#x27;</span></span><br><span class="line">    <span class="attr">skipEventRequest</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">statusCode</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="3-5-常用事件"><a href="#3-5-常用事件" class="headerlink" title="3.5 常用事件"></a>3.5 常用事件</h2><h3 id="a-Event-‘schedule’"><a href="#a-Event-‘schedule’" class="headerlink" title="a) Event: ‘schedule’"></a>a) Event: ‘schedule’</h3><ul><li><code>options</code> <a href="#options-reference">Options</a></li></ul><p>当一个任务被加到计划时触发.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crawler.<span class="title function_">on</span>(<span class="string">&#x27;schedule&#x27;</span>,<span class="keyword">function</span>(<span class="params">options</span>)&#123;</span><br><span class="line">    options.<span class="property">proxy</span> = <span class="string">&quot;http://proxy:port&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="b-Event-‘request’"><a href="#b-Event-‘request’" class="headerlink" title="b) Event: ‘request’"></a>b) Event: ‘request’</h3><ul><li><code>options</code> <a href="#options-reference">Options</a></li></ul><p>当爬虫准备好发送请求时触发.</p><p>如果你想在发出请求之前的最后阶段改变配置，可以监听这个事件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crawler.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>,<span class="keyword">function</span>(<span class="params">options</span>)&#123;</span><br><span class="line">    options.<span class="property">qs</span>.<span class="property">timestamp</span> = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="c-Event-‘drain’"><a href="#c-Event-‘drain’" class="headerlink" title="c) Event: ‘drain’"></a>c) Event: ‘drain’</h3><p>当队列为空时触发。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crawler.<span class="title function_">on</span>(<span class="string">&#x27;drain&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 执行一些操作，如，释放数据库连接。</span></span><br><span class="line">    db.<span class="title function_">end</span>(); <span class="comment">// 关闭MySQL连接。</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="d-crawler-queue-uri-options"><a href="#d-crawler-queue-uri-options" class="headerlink" title="d) crawler.queue(uri|options)"></a>d) crawler.queue(uri|options)</h3><ul><li><code>uri</code> <code>String</code></li><li><code>options</code> <a href="#options-reference">Options</a></li></ul><p>将任务加入队列并等待执行。</p><h3 id="e-crawler-queueSize"><a href="#e-crawler-queueSize" class="headerlink" title="e) crawler.queueSize"></a>e) crawler.queueSize</h3><ul><li><code>Number</code></li></ul><p>队列数量，该属性为只读。</p><h2 id="3-6-配置指南"><a href="#3-6-配置指南" class="headerlink" title="3.6 配置指南"></a>3.6 配置指南</h2><p>你可以将这些配置发给 <code>Crawler()</code> 构造器，让它们成为全局配置，或者自定义 <code>queue()</code> 的请求已覆盖全局配置。</p><p>这个配置列表在mikeal的<a href="https://link.jianshu.com/?t=https://github.com/mikeal/request#requestoptions-callback">request项目配置</a>的基础上做了扩展，并且会直接发送给 <code>request()</code> 方法。</p><h3 id="a-基本请求配置项"><a href="#a-基本请求配置项" class="headerlink" title="a) 基本请求配置项"></a>a) 基本请求配置项</h3><ul><li><code>uri</code>: <code>String</code> 你想爬取的网页链接.</li><li><code>timeout</code> : <code>Number</code> 单位是毫秒 (默认 15000).</li><li><a href="https://link.jianshu.com/?t=https://github.com/mikeal/request#requestoptions-callback">支持mikeal的request的所有配置</a>.</li></ul><h3 id="b-回调"><a href="#b-回调" class="headerlink" title="b) 回调"></a>b) 回调</h3><ul><li><code>callback(error, res, done)</code>: 请求完成后会被调用<ul><li><code>error</code>: <a href="https://link.jianshu.com/?t=https://nodejs.org/api/errors.html">Error</a></li><li><code>res</code>: <a href="https://link.jianshu.com/?t=https://nodejs.org/api/http.html#http_class_http_incomingmessage">http.IncomingMessage</a> 请求的回应，包括 <code>$</code> 和 <code>options</code>  <ul><li><code>res.statusCode</code>: <code>Number</code> HTTP status code. E.G.<code>200</code></li><li><code>res.body</code>: <code>Buffer</code> | <code>String</code> HTTP返回内容，可能是HTML页面、纯文本或XML文档。</li><li><code>res.headers</code>: <code>Object</code> HTTP请求的返回头</li><li><code>res.request</code>:<code> Request</code> Mikeal的 Request 的实例，以取代 http.ClientRequest</li><li><code>res.request.uri</code>: <a href="https://link.jianshu.com/?t=https://nodejs.org/api/url.html#url_url_strings_and_url_objects">urlObject</a> 解析后的URL实体</li><li><code>res.request.method</code>: <code>String</code> HTTP request method. E.G. <code>GET</code></li><li><code>res.request.headers</code>: <code>Object</code> HTTP request headers</li><li><code>res.options</code>: <a href="#options-reference">Options</a> 配置项</li><li><code>$</code>: <a href="https://link.jianshu.com/?t=https://api.jquery.com/category/selectors/">jQuery Selector</a> HTML和XML的选择器</li></ul></li><li><code>done</code>: <code>Function</code> 回调中要做的事情做完后需要调用这个</li></ul></li></ul><h3 id="c-计划任务选项"><a href="#c-计划任务选项" class="headerlink" title="c) 计划任务选项"></a>c) 计划任务选项</h3><ul><li><code>maxConnections</code>: <code>Number</code> 连接池大小 (默认 10).</li><li><code>rateLimit</code>: <code>Number</code> 每条请求之间的间隔时间，单位毫秒 (默认 0).</li><li><code>priorityRange</code>: <code>Number</code> 可接受的优先级数值，最小为0 (默认 10).</li><li><code>priority</code>: <code>Number</code> 当前请求的优先级 (默认 5).</li></ul><h3 id="d-重试选项"><a href="#d-重试选项" class="headerlink" title="d) 重试选项"></a>d) 重试选项</h3><ul><li><code>retries</code>: <code>Number</code> 请求失败后的重试次数 (默认 3),</li><li><code>retryTimeout</code>: <code>Number</code> 重试前等待的时间，单位毫秒 (默认 10000),</li></ul><h3 id="e-服务端DOM配置"><a href="#e-服务端DOM配置" class="headerlink" title="e) 服务端DOM配置"></a>e) 服务端DOM配置</h3><ul><li><code>jQuery</code>: <code>Boolean</code>|<code>String</code>|<code>Object</code> 如果设置为true，使用<code>cheerio</code>和默认配置来注入爬取内容。或使用<a href="https://link.jianshu.com/?t=https://github.com/fb55/htmlparser2/wiki/Parser-options">解析选项</a>自定义<code>cheerio</code>. 当返回false时停止注入jQuery选择器。如果在你的项目中存在内存泄漏，使用一个替代的解析器”whacko”来避免。（默认 true）</li></ul><h3 id="d-字符集编码"><a href="#d-字符集编码" class="headerlink" title="d) 字符集编码"></a>d) 字符集编码</h3><ul><li><code>forceUTF8</code>: <code>Boolean</code> 。如果设置为true，爬虫将从HTTP请求头中获取字符集或从HTML中获取meta tag，并且将它转换到UTF8，不用再担心编码问题了（默认 true）</li><li><code>incomingEncoding</code>: <code>String</code> 。当设置 <code>forceUTF8: true</code> 时可自行设置接收内容的编码 (默认 null)，爬虫就不用自己检测编码了。 如 <code>incomingEncoding : &#39;windows-1255&#39;</code>。查看 <a href="https://link.jianshu.com/?t=https://github.com/ashtuchkin/iconv-lite/wiki/Supported-Encodings">所有支持的编码</a></li></ul><h3 id="e-缓存"><a href="#e-缓存" class="headerlink" title="e) 缓存"></a>e) 缓存</h3><ul><li><code>skipDuplicates</code>: <code>Boolean</code> 设置为true时，跳过已爬取过的URI，甚至不触发 <code>callback()</code>（默认 false）。 ###不推荐改动###  ，更好的做法是在爬虫之外使用<a href="https://link.jianshu.com/?t=https://github.com/mike442144/seenreq">seenreq</a>进行处理。</li></ul><h3 id="f-http头"><a href="#f-http头" class="headerlink" title="f) http头"></a>f) http头</h3><ul><li><code>rotateUA</code>: <code>Boolean</code> 当为true时, <code>userAgent</code> 应该是数组，并进行轮换 (默认 false)</li><li><code>userAgent</code>: <code>String</code>|<code>Array</code>, 如果 <code>rotateUA</code> 为 false, 但 <code>userAgent</code> 是一个数组, 爬虫将使用第一个值。</li><li><code>referer</code>: <code>String</code> 当为真时设置HTTP的 referer header</li><li><code>headers</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> Raw key-value of http headers</li></ul><h1 id="4-爬取电影-后端渲染"><a href="#4-爬取电影-后端渲染" class="headerlink" title="4.爬取电影(后端渲染)"></a>4.爬取电影(后端渲染)</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.通过起始地址获取所有分类地址</span></span><br><span class="line"><span class="comment">//2.通过分类地址获取分类地址下的所有影片地址</span></span><br><span class="line"><span class="comment">//3.通过每一个影片地址获取影片的详情数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Crawler</span> = <span class="built_in">require</span>(<span class="string">&#x27;crawler&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c = <span class="keyword">new</span> <span class="title class_">Crawler</span>(&#123;</span><br><span class="line">    <span class="comment">//每次请求爬取的时间间隔</span></span><br><span class="line">    <span class="attr">rateLimit</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="comment">//最大连接数量</span></span><br><span class="line">    <span class="attr">maxConnections</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="comment">//爬取成功的回调函数（通用）</span></span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取url下所有的分类数据</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getAllCategories</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">queue</span>([&#123;</span><br><span class="line">            <span class="attr">uri</span>: url,</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">                    <span class="keyword">const</span> $indexSearchR = $(<span class="string">&quot;.search-index-R&quot;</span>);</span><br><span class="line">                    <span class="keyword">const</span> categoryArr = []</span><br><span class="line">                    $indexSearchR.<span class="title function_">map</span>(<span class="function">(<span class="params">index, item</span>) =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> $item = $(item);</span><br><span class="line">                        <span class="keyword">const</span> $categories = $item.<span class="title function_">find</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">                        $categories.<span class="title function_">map</span>(<span class="function">(<span class="params">index, category</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">let</span> href = $(category).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>);</span><br><span class="line">                            <span class="keyword">if</span> (href == <span class="string">&quot;javascript:void(0);&quot;</span>) &#123;</span><br><span class="line">                                href = $(category).<span class="title function_">attr</span>(<span class="string">&#x27;onclick&#x27;</span>).<span class="title function_">split</span>(<span class="string">&quot;&#x27;&quot;</span>)[<span class="number">1</span>]</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">const</span> categoryobj = &#123;</span><br><span class="line">                                <span class="attr">name</span>: $(category).<span class="title function_">text</span>(),</span><br><span class="line">                                <span class="attr">href</span>: href</span><br><span class="line">                            &#125;</span><br><span class="line">                            categoryArr.<span class="title function_">push</span>(categoryobj)</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                    <span class="title function_">resolve</span>(categoryArr)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">done</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;]);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取某一个分类下的影片信息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getMovieByCategoriy</span>(<span class="params">category</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">queue</span>(&#123;</span><br><span class="line">            <span class="attr">uri</span>: category.<span class="property">href</span>,</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">                <span class="keyword">const</span> $searchList = $(<span class="string">&quot;.search-list&gt;div&quot;</span>);</span><br><span class="line">                <span class="keyword">const</span> movies = []</span><br><span class="line">                $searchList.<span class="title function_">map</span>(<span class="function">(<span class="params">index, item</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> name = $(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&gt;h3&#x27;</span>).<span class="title function_">text</span>()</span><br><span class="line">                    <span class="keyword">const</span> href = $(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">                    movies.<span class="title function_">push</span>(&#123;</span><br><span class="line">                        name,</span><br><span class="line">                        href</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="title function_">resolve</span>(movies)</span><br><span class="line">                <span class="title function_">done</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取所有分类下的影片信息  async修饰的方法会返回一个Promise</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getAllMovieByCategories</span>(<span class="params">categoryArr</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> allMovies = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; categoryArr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> category = categoryArr[i];</span><br><span class="line">        <span class="keyword">let</span> movies = <span class="keyword">await</span> <span class="title function_">getMovieByCategoriy</span>(category);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(movies)</span><br><span class="line">        allMovies.<span class="title function_">push</span>(...movies)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> allMovies;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取指定movie(一个)的影片信息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getMovieMessage</span>(<span class="params">movie</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">queue</span>(&#123;</span><br><span class="line">            <span class="attr">uri</span>: movie.<span class="property">href</span>,</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">                <span class="keyword">const</span> $movieInfo = $(<span class="string">&#x27;.playerBox-info-leftPart&#x27;</span>);</span><br><span class="line">                <span class="keyword">const</span> name = $movieInfo.<span class="title function_">find</span>(<span class="string">&#x27;.playerBox-info-title&gt;.playerBox-info-cnName&#x27;</span>).<span class="title function_">text</span>();</span><br><span class="line">                <span class="keyword">const</span> ename = $movieInfo.<span class="title function_">find</span>(<span class="string">&#x27;.playerBox-info-title&gt;.playerBox-info-enName&#x27;</span>).<span class="title function_">text</span>();</span><br><span class="line">                <span class="keyword">const</span> year = $movieInfo.<span class="title function_">find</span>(<span class="string">&#x27;.playerBox-info-title&gt;.playerBox-info-year&#x27;</span>).<span class="title function_">text</span>()</span><br><span class="line">                <span class="keyword">const</span> grade = $movieInfo.<span class="title function_">find</span>(<span class="string">&#x27;.playerBox-info-title .playerBox-info-grade&#x27;</span>).<span class="title function_">html</span>()</span><br><span class="line">                <span class="keyword">const</span> intro = $movieInfo.<span class="title function_">find</span>(<span class="string">&#x27;.playerBox-info-intro&gt;#playerBoxIntroCon&#x27;</span>).<span class="title function_">text</span>()</span><br><span class="line">                <span class="keyword">const</span> movieInfo = &#123;</span><br><span class="line">                    name,</span><br><span class="line">                    ename,</span><br><span class="line">                    year,</span><br><span class="line">                    grade,</span><br><span class="line">                    intro</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">resolve</span>(movieInfo)</span><br><span class="line">                <span class="title function_">done</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取所有电影的影片信息</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getAllMovieMessageByMovies</span>(<span class="params">movies</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> allMovieMessages = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; movies.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> movie = movies[i];</span><br><span class="line">        <span class="keyword">let</span> movieMsg = <span class="keyword">await</span> <span class="title function_">getMovieMessage</span>(movie);</span><br><span class="line">        allMovieMessages.<span class="title function_">push</span>(movieMsg)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(movieMsg)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> allMovieMessages;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行爬取网站请求</span></span><br><span class="line"><span class="title function_">getAllCategories</span>(<span class="string">&quot;https://www.1905.com/vod/list/n_1/o4p1.html&quot;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getAllMovieByCategories</span>(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res,<span class="string">&quot;8888888888888&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getAllMovieMessageByMovies</span>(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//在实际爬取过程中，可以先将分类数据爬取入库，然后下次爬取的时候直接读取分类数据，然后进行下一步的爬取</span></span><br></pre></td></tr></table></figure><h1 id="5-反爬虫策略"><a href="#5-反爬虫策略" class="headerlink" title="5.反爬虫策略"></a>5.反爬虫策略</h1><p>爬虫面临的最大挑战就反爬虫。在爬网站的内容的时候并不是一爬就可以了，有时候就会遇到一些网站的反爬虫，会经常遇到返回一些404，403或者500的状态码，或者直接返回的是混淆后的密文，根本无法提取出其中的有效信息。下面列举常见的反爬虫方式以及解决方案。</p><h2 id="5-1-请求头HTTP-Header屏蔽"><a href="#5-1-请求头HTTP-Header屏蔽" class="headerlink" title="5.1 请求头HTTP-Header屏蔽"></a>5.1 请求头HTTP-Header屏蔽</h2><p>Headers反爬虫是最常见的反爬虫策略。由于正常用户访问网站时是通过浏览器访问的，所以目标网站通常会在收到请求时校验Headers中的User-Agent字段，如果不是携带正常的User-Agent信息的请求便无法通过请求。还有一部分网站为了防盗链，还会校验请求Headers中的Referer、COOKIE信息。</p><p>遇到了这类反爬虫机制，需要根据实际爬取的网站进行定制化的模拟来符合正常访问，需要工程师去分析判断网站Http-header的验证方式，并针对性地进行调整。</p><h2 id="5-2-验证码屏蔽方式"><a href="#5-2-验证码屏蔽方式" class="headerlink" title="5.2 验证码屏蔽方式"></a>5.2 验证码屏蔽方式</h2><p>验证码几乎是现在所有站点对付爬虫的手段，验证码包括图像验证码、短信动态密码、语音密码、USB加密狗等方式。简单的验证码可以通过OCR技术实现验证码识别，而遇到复杂的验证机制，依托现有技术很难解决，往往需要人工来进行辅助验证。只有通过平台的验证码后，才能访问到所需要的信息。</p><h2 id="5-3-封IP、限制IP访问频率"><a href="#5-3-封IP、限制IP访问频率" class="headerlink" title="5.3 封IP、限制IP访问频率"></a>5.3 封IP、限制IP访问频率</h2><p>如果一个固定的IP在短暂的时间内快速大量的访问一个网站，应用后台往往会自动判断是机器爬虫。带来的结果就是直接将这个IP给封了，爬虫程序自然也就做不了什么了。</p><p>解决方法主要就是通过###  购买IP代理池###  ，然后通过代理的方式实现不同的IP地址、间隔性地进行访问。</p><h2 id="5-4-动态加载技术实现反爬虫"><a href="#5-4-动态加载技术实现反爬虫" class="headerlink" title="5.4 动态加载技术实现反爬虫"></a>5.4 动态加载技术实现反爬虫</h2><p>对于一些动态网页，利用JS动态填充技术，实现内容的动态填充。如果简单解析Http会发现返回的信息为空，而真正有用的信息则影藏在JS文件中，或者通过ajax请求得到。这种情况需要进行完全模拟终端用户的正常访问请求，以及浏览动作，在浏览器端重现用户行为，才能够获取到所需要的信息。</p><h2 id="5-5-内容的加密与混淆"><a href="#5-5-内容的加密与混淆" class="headerlink" title="5.5 内容的加密与混淆"></a>5.5 内容的加密与混淆</h2><p>数据加密混淆的方式有很多种，国内主流的网站（淘宝、天猫、微博、新浪等）基本都采用了特殊的数据混淆加密的收到，本地数据均为混淆后的数据无法直接采集使用，需要开发人员进行分析，找出混淆的规律，再利用解析器来提取出有效信息。</p><p>还有一种加密是服务器端加密，在客户端或者前端解密，比如想抓app端的一些数据，发现接口返回的结果都是加密后的密文，需要反编译apk文件获得源码读源码，找到加密算法、密匙进行反向工程。</p><h2 id="5-6-增量与存量内容对比与整合"><a href="#5-6-增量与存量内容对比与整合" class="headerlink" title="5.6 增量与存量内容对比与整合"></a>5.6 增量与存量内容对比与整合</h2><p>针对一些长期的爬取需求，会定时进行爬取，而如何有效的爬取出其中新增和更新的内容，以及如何将爬取下来的增量内容与存量的内容进行对比分析、整合形成一个完整数据集。</p><h2 id="5-7-不定期的应用变更、上线反爬虫措施"><a href="#5-7-不定期的应用变更、上线反爬虫措施" class="headerlink" title="5.7 不定期的应用变更、上线反爬虫措施"></a>5.7 不定期的应用变更、上线反爬虫措施</h2><p>爬虫和反爬虫作为相生相克的死对头，无论爬虫多厉害，都是能被复杂的反爬虫机制发现，从而采用更为先进、难以破解的反爬虫措施。国内主流的网站（淘宝、天猫、微博、京东等）为了防止被爬虫，会不定期地对反爬虫措施进行变更，使得原有的爬虫程序完全失效，开发者也将不得不重新开发一套新的爬虫程序，以适应爬取数据需求。</p><h1 id="6-使用代理"><a href="#6-使用代理" class="headerlink" title="6.使用代理"></a>6.使用代理</h1><p>使用limiter控制爬取频率。所有提交到limiter的任务都需要遵守rateLimit 和maxConnections 的限制。rateLimit是两个任务之间的最小间隔，maxConnections是最大的并发数。limiters之间是互相独立的。一个通常的用例是为不同的代理设置不同的limiter。另外值得一提的是，当rateLimit设置为非0的值时，maxConnections 的值将被强制为1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Crawler</span> = <span class="built_in">require</span>(<span class="string">&#x27;crawler&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c = <span class="keyword">new</span> <span class="title class_">Crawler</span>(&#123;</span><br><span class="line">    <span class="comment">//每次请求爬取的时间间隔</span></span><br><span class="line">    <span class="attr">rateLimit</span>: <span class="number">2000</span>,</span><br><span class="line">    <span class="comment">//最大连接数量</span></span><br><span class="line">    <span class="attr">maxConnections</span>: <span class="number">10</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c.<span class="title function_">queue</span>(&#123;</span><br><span class="line">    <span class="attr">uri</span>: <span class="string">&#x27;https://www.1905.com/vod/list/n_1/o4p1.html&#x27;</span>,</span><br><span class="line">    <span class="attr">limiter</span>: <span class="string">&#x27;proxy_1&#x27;</span>,</span><br><span class="line">    <span class="attr">proxy</span>: <span class="string">&#x27;http://1.181.48.68:3128&#x27;</span>,</span><br><span class="line">    <span class="comment">//爬取成功的回调函数（通用）</span></span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">            <span class="keyword">const</span> $searchList = $(<span class="string">&#x27;.search-list&gt;div&#x27;</span>);</span><br><span class="line">            $searchList.<span class="title function_">map</span>(<span class="function">(<span class="params">index, item</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>($(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&gt;h3&#x27;</span>).<span class="title function_">text</span>(),<span class="string">&quot;proxy_1&quot;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">c.<span class="title function_">queue</span>(&#123;</span><br><span class="line">    <span class="attr">uri</span>: <span class="string">&#x27;https://www.1905.com/vod/list/n_1_c_922/o4p1.html&#x27;</span>,</span><br><span class="line">    <span class="attr">limiter</span>: <span class="string">&#x27;proxy_2&#x27;</span>,</span><br><span class="line">    <span class="attr">proxy</span>: <span class="string">&#x27;http://129.204.182.65:9999&#x27;</span>,</span><br><span class="line">    <span class="comment">//爬取成功的回调函数（通用）</span></span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">            <span class="keyword">const</span> $searchList = $(<span class="string">&#x27;.search-list&gt;div&#x27;</span>);</span><br><span class="line">            $searchList.<span class="title function_">map</span>(<span class="function">(<span class="params">index, item</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>($(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&gt;h3&#x27;</span>).<span class="title function_">text</span>(),<span class="string">&quot;proxy_2&quot;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">c.<span class="title function_">queue</span>(&#123;</span><br><span class="line">    <span class="attr">uri</span>: <span class="string">&#x27;https://www.1905.com/vod/list/n_2/o3p1.html&#x27;</span>,</span><br><span class="line">    <span class="attr">limiter</span>: <span class="string">&#x27;proxy_3&#x27;</span>,</span><br><span class="line">    <span class="attr">proxy</span>: <span class="string">&#x27;http://113.195.202.183:9999&#x27;</span>,</span><br><span class="line">    <span class="comment">//爬取成功的回调函数（通用）</span></span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">            <span class="keyword">const</span> $searchList = $(<span class="string">&#x27;.search-list&gt;div&#x27;</span>);</span><br><span class="line">            $searchList.<span class="title function_">map</span>(<span class="function">(<span class="params">index, item</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>($(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&gt;h3&#x27;</span>).<span class="title function_">text</span>(),<span class="string">&quot;proxy_3&quot;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">c.<span class="title function_">queue</span>(&#123;</span><br><span class="line">    <span class="attr">uri</span>: <span class="string">&#x27;https://www.1905.com/vod/list/c_927/o3p1.html&#x27;</span>,</span><br><span class="line">    <span class="attr">limiter</span>: <span class="string">&#x27;proxy_4&#x27;</span>,</span><br><span class="line">    <span class="attr">proxy</span>: <span class="string">&#x27;http://120.222.17.151:3128&#x27;</span>,</span><br><span class="line">    <span class="comment">//爬取成功的回调函数（通用）</span></span><br><span class="line">    <span class="attr">callback</span>: <span class="function">(<span class="params">error, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> $ = res.<span class="property">$</span>;</span><br><span class="line">            <span class="keyword">const</span> $searchList = $(<span class="string">&#x27;.search-list&gt;div&#x27;</span>);</span><br><span class="line">            $searchList.<span class="title function_">map</span>(<span class="function">(<span class="params">index, item</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>($(item).<span class="title function_">find</span>(<span class="string">&#x27;.pic-pack-outer&gt;h3&#x27;</span>).<span class="title function_">text</span>(),<span class="string">&quot;proxy_4&quot;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">done</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"># 网上的免费代理，绝不大部分都是不能用的，如有需求，可以购买代理</span><br></pre></td></tr></table></figure><h1 id="7-爬取音乐-前后端分离"><a href="#7-爬取音乐-前后端分离" class="headerlink" title="7.爬取音乐(前后端分离)"></a>7.爬取音乐(前后端分离)</h1><p><a href="https://www.vfinemusic.com/music-library">https://www.vfinemusic.com/music-library</a></p><h2 id="7-1-爬取下载音乐"><a href="#7-1-爬取下载音乐" class="headerlink" title="7.1 爬取下载音乐"></a>7.1 爬取下载音乐</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Crawler</span> = <span class="built_in">require</span>(<span class="string">&#x27;crawler&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c = <span class="keyword">new</span> <span class="title class_">Crawler</span>(&#123;</span><br><span class="line">    <span class="comment">//每次请求爬取的时间间隔</span></span><br><span class="line">    <span class="attr">rateLimit</span>: <span class="number">2000</span>,</span><br><span class="line">    <span class="comment">//最大连接数量</span></span><br><span class="line">    <span class="attr">maxConnections</span>: <span class="number">10</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getMusicList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> musics = []</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">queue</span>(&#123;</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">uri</span>: <span class="string">&#x27;https://www.vfinemusic.com/v1/works&#x27;</span>,</span><br><span class="line">            <span class="attr">qs</span>: &#123;</span><br><span class="line">                <span class="attr">format</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">                <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">page_size</span>: <span class="number">24</span>,</span><br><span class="line">                <span class="attr">status</span>: <span class="string">&quot;ONLINE&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//自定义爬取的回调函数</span></span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> results = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>).<span class="property">results</span>;</span><br><span class="line">                    results.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">                        musics.<span class="title function_">push</span>(&#123;</span><br><span class="line">                            <span class="attr">name</span>: item.<span class="property">name</span>,</span><br><span class="line">                            <span class="attr">producer</span>: item.<span class="property">producer</span>.<span class="property">name</span>,</span><br><span class="line">                            <span class="attr">url</span>: item.<span class="property">preview</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                    <span class="title function_">resolve</span>(musics)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c2 = <span class="keyword">new</span> <span class="title class_">Crawler</span>(&#123;</span><br><span class="line">    <span class="comment">//设置encoding为null，不会将服务器返回内容用字符串进行编码</span></span><br><span class="line">    <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">jQuery</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">downLoadOneMusic</span>(<span class="params">url, name</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> extname = path.<span class="title function_">extname</span>(url);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c2.<span class="title function_">queue</span>(&#123;</span><br><span class="line">            <span class="attr">uri</span>: url,</span><br><span class="line">            <span class="attr">filename</span>: name + extname,</span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">err, res, done</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(err);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    fs.<span class="title function_">createWriteStream</span>(<span class="string">&quot;data\\musics\\&quot;</span> + res.<span class="property">options</span>.<span class="property">filename</span>).<span class="title function_">write</span>(res.<span class="property">body</span>);</span><br><span class="line">                    <span class="title function_">resolve</span>()</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">done</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">downLoadAllMusic</span>(<span class="params">musics</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; musics.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">downLoadOneMusic</span>(musics[i].<span class="property">url</span>, musics[i].<span class="property">name</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下载&quot;</span> + musics[i].<span class="property">name</span> + <span class="string">&quot;完毕&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;下载完毕&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">getMusicList</span>()</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">musics</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(musics)</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">downLoadAllMusic</span>(musics)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h2 id="7-2-爬取我的订单"><a href="#7-2-爬取我的订单" class="headerlink" title="7.2 爬取我的订单"></a>7.2 爬取我的订单</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Crawler</span> = <span class="built_in">require</span>(<span class="string">&#x27;crawler&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c = <span class="keyword">new</span> <span class="title class_">Crawler</span>(&#123;</span><br><span class="line">    <span class="comment">//每次请求爬取的时间间隔</span></span><br><span class="line">    <span class="attr">rateLimit</span>: <span class="number">2000</span>,</span><br><span class="line">    <span class="comment">//最大连接数量</span></span><br><span class="line">    <span class="attr">maxConnections</span>: <span class="number">10</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意点：</span></span><br><span class="line"><span class="comment">    1.需要使用fiddler抓包工具分析接口</span></span><br><span class="line"><span class="comment">    2.借助postman来测试请求</span></span><br><span class="line"><span class="comment">    3.借助浏览器来登录注销查看接口地址</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">主要流程：</span></span><br><span class="line"><span class="comment">    1.调用登录接口(post请求)，获取用户登录的cookie信息</span></span><br><span class="line"><span class="comment">    2.根据登录后的cookie，调用user/profile接口，获取用户信息(包含uuid)</span></span><br><span class="line"><span class="comment">    3.在获取订单数据的时候，调用auth接口，根据uuid获取访问的tocken凭证</span></span><br><span class="line"><span class="comment">    4.根据tocken凭证和uuid，调用order接口，获取用户对应的订单信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟登录的方法：返回登录之后的cookies信息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">direct</span>(&#123;</span><br><span class="line">            <span class="attr">uri</span>: <span class="string">&#x27;https://www.vfinemusic.com/v1/users/login&#x27;</span>,</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json; charset=UTF-8&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">                <span class="string">&quot;email&quot;</span>: <span class="string">&quot;mazg1987@163.com&quot;</span>,</span><br><span class="line">                <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;password&quot;</span>: <span class="string">&quot;abcd1234&quot;</span>,</span><br><span class="line">                <span class="string">&quot;device_id&quot;</span>: <span class="string">&quot;vf1621510105960-39532&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="comment">//自定义爬取的回调函数</span></span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>(res.<span class="property">headers</span>[<span class="string">&#x27;set-cookie&#x27;</span>])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> userInfo = &#123;&#125;</span><br><span class="line"><span class="comment">//根据cookies获取用户信息(里面包含uuid，后面在获取订单数据的时候需要根据uuid来生成tocken，再根据tocken获取订单数据)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getUserId</span>(<span class="params">cookies</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(cookies);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">direct</span>(&#123;</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">uri</span>: <span class="string">&#x27;https://www.vfinemusic.com/v1/users/profile&#x27;</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Cookie&quot;</span>: <span class="string">`<span class="subst">$&#123;cookies[<span class="number">0</span>]&#125;</span>;<span class="subst">$&#123;cookies[<span class="number">1</span>]&#125;</span>`</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//自定义爬取的回调函数</span></span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>))</span><br><span class="line">                    userInfo = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>)</span><br><span class="line">                    <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据用户信息获取access_tocken</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getAcceccTocken</span>(<span class="params">uuid</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">direct</span>(&#123;</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">uri</span>: <span class="string">`https://www.vfinemusic.com/php/v1/auth/?user_id=<span class="subst">$&#123;uuid&#125;</span>`</span>,</span><br><span class="line">            <span class="comment">//自定义爬取的回调函数</span></span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>))</span><br><span class="line">                    <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>).<span class="property">access_token</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据access_tocken获取用户的订单数据</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getOrderList</span>(<span class="params">tocken</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        c.<span class="title function_">direct</span>(&#123;</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">uri</span>: <span class="string">&#x27;https://www.vfinemusic.com/php/v1/get_charge_orders/&#x27;</span>,</span><br><span class="line">            <span class="attr">qs</span>: &#123;</span><br><span class="line">                <span class="attr">user_id</span>: userInfo.<span class="property">uuid</span>,</span><br><span class="line">                <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">access_token</span>: tocken</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//自定义爬取的回调函数</span></span><br><span class="line">            <span class="attr">callback</span>: <span class="function">(<span class="params">error, res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(error)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>))</span><br><span class="line">                    <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">body</span>))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">doLogin</span>()</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">cookies</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getUserId</span>(cookies)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">userInfo</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getAcceccTocken</span>(userInfo.<span class="property">uuid</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">tocken</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getOrderList</span>(tocken)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/17/hello-world/"/>
      <url>/2022/02/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>教你如何从零开始搭建一个属于自己的网站</title>
      <link href="/2020/03/05/xxx/"/>
      <url>/2020/03/05/xxx/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> lanmei的小安利 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
